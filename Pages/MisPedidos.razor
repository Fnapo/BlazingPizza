@page "/mispedidos"
@using BlazingPizza.Model
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JavaScript

<div class="main" @ref=ReferenciaMenu>
    <div id=@id @ref=ReferenciaDiv>
    <p>Alturas = @alturaMain y @alturaDiv y @otraAltura</p>
    @if (ordersWithStatus == null)
    {
        <text>Loading...</text>
    }
    else if (!ordersWithStatus.Any())
    {
        <h2>No orders placed</h2>
        <a class="btn btn-success" href="">Order some pizza</a>
    }
    else
    {
        <div class="list-group orders-list">
        @foreach (var item in ordersWithStatus)
        {
            <div class="list-group-item">
                <div class="col">
                    <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                    Items:
                    <strong>@item.Order.Pizzas.Count()</strong>;
                    Total price:
                    <strong>Â£@item.Order.GetFormattedTotalPrice()</strong>
                </div>
                <div class="col">
                    Status: <strong>@item.StatusText</strong>
                </div>
                @if (@item.StatusText != "Delivered")
                {
                    <div class="col flex-grow-0">
                        <!--  <a href="mispedidos/" class="btn btn-success">-->
                        <a @onclick="OnParametersSetAsync" class="btn btn-success">
                            Track &gt;
                        </a>
                    </div>
                }
            </div>
        }
        </div>
    }
    </div>
</div>

@code {
    List<OrderWithStatus> ordersWithStatus = new List<OrderWithStatus>();
    ElementReference ReferenciaMenu, ReferenciaDiv;
    int alturaMain=0, alturaDiv=0, otraAltura=0;
    string id="PedidosDiv";

    protected override async Task OnParametersSetAsync()
    {
      ordersWithStatus = await HttpClient.GetFromJsonAsync<List<OrderWithStatus>>(
          $"{NavigationManager.BaseUri}orders");
    }

    protected override async Task OnAfterRenderAsync(bool esPrimero)
    {    
        alturaMain= await JavaScript.InvokeAsync<int>("obtenerAltura", ReferenciaMenu);
        alturaDiv= await JavaScript.InvokeAsync<int>("obtenerAltura", ReferenciaDiv);
    }
}
